import { MindMapMind } from './mind-map-mind';
export declare const customizeFormat: {
    nodeTree: {
        example: {
            meta: {
                name: string;
                author: string;
                version: string;
            };
            format: string;
            data: {
                id: string;
                topic: string;
            };
        };
        getMind: (source: any) => MindMapMind;
        getData: (mind: any) => {
            meta: {};
            format: string;
            data: {};
        };
        _parse: (mind: any, node_root: any) => void;
        _extractData: (node_json: any) => {};
        _extractSubNode: (mind: any, node_parent: any, node_json: any) => void;
        _buildNode: (node: any) => {
            id: string;
            topic: string;
            direction: string;
            children: any[];
            selectedType: string;
            isCreated: boolean;
            isroot: boolean;
            expanded: boolean;
        };
    };
    node_array: {
        example: {
            meta: {
                name: string;
                author: string;
                version: string;
            };
            format: string;
            data: {
                id: string;
                topic: string;
                isroot: boolean;
            }[];
        };
        getMind: (source: any) => MindMapMind;
        getData: (mind: any) => {
            meta: {};
            format: string;
            data: any[];
        };
        _parse: (mind: any, node_array: any) => void;
        _extractRoot: (mind: any, node_array: any) => any;
        _extractSubNode: (mind: any, parentid: any, node_array: any) => number;
        _extractData: (node_json: any) => {};
        _array: (mind: any, node_array: any) => void;
        _arrayNode: (node: any, node_array: any) => void;
    };
    freemind: {
        example: {
            meta: {
                name: string;
                author: string;
                version: string;
            };
            format: string;
            data: string;
        };
        getMind: (source: any) => MindMapMind;
        getData: (mind: any) => {
            meta: {};
            format: string;
            data: string;
        };
        _parseXml: (xml: any) => any;
        _findRoot: (xml_doc: any) => any;
        _loadNode: (mind: any, parent_id: any, xml_node: any) => void;
        _loadAttributes: (xml_node: any) => {};
        _buildMap: (node: any, xmllines: any) => void;
    };
};
